@using Blazor.Wasm.Dialogs
@inherits LayoutComponentBase
@inject IDialogService DialogService

<MudThemeProvider Theme="@_theme" IsDarkMode="_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudImage Height="50" Src="https://cdn0.erstegroup.com/content/dam/hr/ebc/common/logos/erste-bank-white.svg" Alt="Erste" Class="pt-1" Elevation="0" />
        <MudSpacer />
        <MudIconButton Icon="@(DarkLightModeButtonIcon)" OnClick="@DarkModeToggle" />
        <MudButtonGroup Variant="Variant.Text">
            <MudButton>Gotovina</MudButton>
            <MudButton>Proizvodi partnera</MudButton>
            <MudButton>Bezgotovina</MudButton>
            <MudButton>Trezor</MudButton>
            <MudMenu Label="Ostale aplikacije" Color="Color.Default" Dense="true" EndIcon="@Icons.Material.Filled.KeyboardArrowDown">
                <MudMenuItem Label="Corporate Digital Lending" />
                <MudMenuItem Label="Obavijest o troškovima" />
                <MudMenuItem Label="Upravljanje blagajnom" />
            </MudMenu>
        </MudButtonGroup>
        <MudMenu Icon="@Icons.Material.Filled.MoreVert" AriaLabel="Otvori menu">
            <MudMenuItem Label="Pomoć" />
            <MudMenuItem Label="Lista zadataka" />
            <MudMenuItem OnClick="OpenDialogAsync" Label="Odabir klijenta" />
            <MudMenuItem Label="Kraj rada" />
        </MudMenu>
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = true;
    private MudTheme? _theme = null;

    private readonly DialogOptions _noHeader = new() { NoHeader = true, FullWidth = true, MaxWidth = MaxWidth.Large };

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _theme = new()
        {
            PaletteLight = _lightPalette,
            PaletteDark = _darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private Task OpenDialogAsync() => DialogService.ShowAsync<OdabirKlijenta>("",_noHeader);

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void DarkModeToggle()
    {
        _isDarkMode = !_isDarkMode;
    }

    private readonly PaletteLight _lightPalette = new()
    {
        Black = "#110e2d",
        AppbarText = "#424242",
        AppbarBackground = "rgba(40,112,237,1)",
        DrawerBackground = "#ffffff",
        GrayLight = "#e8e8e8",
        GrayLighter = "#f9f9f9",
    };

    private readonly PaletteDark _darkPalette = new()
    {
        Primary = "#7e6fff",
        Surface = "#1e1e2d",
        Background = "#1a1a27",
        BackgroundGray = "#151521",
        AppbarText = "#92929f",
        AppbarBackground = "rgba(26,26,39,0.8)",
        DrawerBackground = "#1a1a27",
        ActionDefault = "#74718e",
        ActionDisabled = "#9999994d",
        ActionDisabledBackground = "#605f6d4d",
        TextPrimary = "#b2b0bf",
        TextSecondary = "#92929f",
        TextDisabled = "#ffffff33",
        DrawerIcon = "#92929f",
        DrawerText = "#92929f",
        GrayLight = "#2a2833",
        GrayLighter = "#1e1e2d",
        Info = "#4a86ff",
        Success = "#3dcb6c",
        Warning = "#ffb545",
        Error = "#ff3f5f",
        LinesDefault = "#33323e",
        TableLines = "#33323e",
        Divider = "#292838",
        OverlayLight = "#1e1e2d80",
    };

    public string DarkLightModeButtonIcon => _isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode,
    };
}


